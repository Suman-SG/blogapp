@* @model blogapp.Models.User
@{
    ViewData["Title"] = "Register";

    var floatingComments = new List<string> { "Welcome!", "🎉", "Blog with us!", "You're amazing!" };
    var floatingTags = new List<string> { "#Register", "#BlogLife", "#StartNow" };
    var floatingTexts = new List<string> { "Write", "Connect", "Inspire" };
}

<div class="auth-container">
    <h2 class="text-center">📝 Create Your Account</h2>
    <form method="post" asp-controller="Auth" asp-action="Register" class="auth-form">
        <div class="mb-3">
            <label>Name</label>
            <input type="text" name="Name" class="form-control" required />
        </div>
        <div class="mb-3">
            <label>Email</label>
            <input type="email" name="Email" class="form-control" required />
        </div>
        <div class="mb-3">
            <label>Password</label>
            <input type="password" name="PasswordHash" class="form-control" required />
        </div>
        <button type="submit" class="btn btn-success w-100">Register</button>
    </form>
    <p class="text-center mt-3">Already have an account? <a href="/Auth/Login">Login</a></p>
</div>

<!-- Floating Background Elements -->
<div class="floating-elements">
    @for (int i = 0; i < floatingComments.Count; i++)
    {
        <div class="floating-item" style="left: @(15 + i * 25)% ; animation-delay: @(i * 3)s;">
            <div class="floating-comment">@floatingComments[i]</div>
        </div>
    }

    @for (int i = 0; i < floatingTags.Count; i++)
    {
        <div class="floating-item" style="left: @(10 + i * 30)% ; animation-delay: @(i * 4 + 1)s;">
            <div class="floating-tag">@floatingTags[i]</div>
        </div>
    }

    @for (int i = 0; i < floatingTexts.Count; i++)
    {
        <div class="floating-item" style="left: @(5 + i * 20)% ; animation-delay: @(i * 5 + 2)s;">
            <div class="floating-text">@floatingTexts[i]</div>
        </div>
    }
</div>

<style>
    body {
        background: #f2f4f8;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    .auth-container {
        max-width: 400px;
        margin: 80px auto;
        padding: 30px;
        background: white;
        border-radius: 12px;
        box-shadow: 0 8px 30px rgba(0, 0, 0, 0.1);
        position: relative;
        z-index: 10;
    }

    .auth-form label {
        font-weight: 500;
    }

    .floating-elements {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        pointer-events: none;
        z-index: 0;
    }

    .floating-item {
        position: absolute;
        top: 100%;
        animation: floatUp 15s infinite linear;
        font-size: 0.85rem;
        color: #333;
    }

    .floating-comment, .floating-tag, .floating-text {
        background: rgba(255, 255, 255, 0.85);
        padding: 6px 12px;
        border-radius: 16px;
        box-shadow: 0 2px 8px rgba(0,0,0,0.12);
        display: inline-block;
    }

    @@keyframes floatUp {
        0% {
            transform: translateY(100vh) rotate(0deg) scale(0.8);
            opacity: 0;
        }

        10% {
            opacity: 0.8;
            transform: translateY(90vh) rotate(5deg) scale(1);
        }

        90% {
            opacity: 0.8;
            transform: translateY(-10vh) rotate(-5deg) scale(1);
        }

        100% {
            transform: translateY(-20vh) rotate(0deg) scale(0.8);
            opacity: 0;
        }
    }
</style> 
 


 *@






@* 

@model blogapp.Models.User
@{
    ViewData["Title"] = "Register";

    var floatingComments = new List<string> { "Welcome!", "🎉", "Blog with us!", "You're amazing!" };
    var floatingTags = new List<string> { "#Register", "#BlogLife", "#StartNow" };
    var floatingTexts = new List<string> { "Write", "Connect", "Inspire" };
}

<div class="register-container">
    <div class="register-background">
        <div class="background-overlay"></div>
        <div class="background-image" style="background-image: url('https://images.unsplash.com/photo-1454165804606-c3d57bc86b40?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80')"></div>
    </div>

    <div class="register-card">
        <div class="register-header">
            <img src="https://cdn-icons-png.flaticon.com/512/6681/6681204.png" alt="BlogHub Logo" class="logo">
            <h2>Join BlogHub Community</h2>
            <p>Start sharing your stories with the world</p>
        </div>

        <form method="post" asp-controller="Auth" asp-action="Register" class="register-form">
            <div class="form-group">
                <label for="name">Full Name</label>
                <div class="input-with-icon">
                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                        <path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"></path>
                        <circle cx="12" cy="7" r="4"></circle>
                    </svg>
                    <input type="text" id="name" name="Name" class="form-control" placeholder="Enter your full name" required />
                </div>
            </div>

            <div class="form-group">
                <label for="email">Email Address</label>
                <div class="input-with-icon">
                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                        <path d="M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z"></path>
                        <polyline points="22,6 12,13 2,6"></polyline>
                    </svg>
                    <input type="email" id="email" name="Email" class="form-control" placeholder="Enter your email" required />
                </div>
            </div>

            <div class="form-group">
                <label for="password">Password</label>
                <div class="input-with-icon">
                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                        <rect x="3" y="11" width="18" height="11" rx="2" ry="2"></rect>
                        <path d="M7 11V7a5 5 0 0 1 10 0v4"></path>
                    </svg>
                    <input type="password" id="password" name="PasswordHash" class="form-control" placeholder="Create a password" required />
                </div>
                <div class="password-strength">
                    <div class="strength-meter">
                        <div class="strength-bar weak"></div>
                        <div class="strength-bar medium"></div>
                        <div class="strength-bar strong"></div>
                    </div>
                    <span class="strength-text">Password strength</span>
                </div>
            </div>

            <div class="form-group terms">
                <input type="checkbox" id="terms" required />
                <label for="terms">I agree to the <a href="#">Terms of Service</a> and <a href="#">Privacy Policy</a></label>
            </div>

            <button type="submit" class="register-button">Create Account</button>

            @if (ViewBag.Message != null)
            {
                <div class="alert alert-error">
                    @ViewBag.Message
                </div>
            }
        </form>

       
    </div>
</div>


</div>

<script>
    // Password strength indicator
    const passwordInput = document.getElementById('password');
    const strengthBars = document.querySelectorAll('.strength-bar');
    const strengthText = document.querySelector('.strength-text');

    passwordInput.addEventListener('input', function() {
        const password = this.value;
        let strength = 0;

        // Length check
        if (password.length >= 8) strength += 1;
        if (password.length >= 12) strength += 1;

        // Complexity checks
        if (/[A-Z]/.test(password)) strength += 1;
        if (/[0-9]/.test(password)) strength += 1;
        if (/[^A-Za-z0-9]/.test(password)) strength += 1;

        // Update UI
        strengthBars.forEach((bar, index) => {
            bar.classList.remove('active');
            if (index < strength) {
                bar.classList.add('active');
            }
        });

        // Update text
        if (strength <= 2) {
            strengthText.textContent = "Weak";
            strengthText.style.color = "#ff6b6b";
        } else if (strength <= 4) {
            strengthText.textContent = "Medium";
            strengthText.style.color = "#feca57";
        } else {
            strengthText.textContent = "Strong";
            strengthText.style.color = "#1dd1a1";
        }
    });
</script> *@






@model blogapp.Models.User
@{
    ViewData["Title"] = "Register";
    
}

<style>
    /* Main Container */
    .register-container {
        display: flex;
        min-height: 100vh;
        position: relative;
        overflow: hidden;
    }

    

 

    

    /* Card Styling */
    .register-card {
        background: white;
        border-radius: 12px;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
        width: 100%;
        max-width: 500px;
        margin: 2rem auto;
        padding: 2.5rem;
        position: relative;
        z-index: 1;
    }

    .register-header {
        text-align: center;
        margin-bottom: 2rem;
    }

        .register-header .logo {
            width: 80px;
            height: 80px;
            margin-bottom: 1rem;
        }

        .register-header h2 {
            color: #2c3e50;
            margin-bottom: 0.5rem;
        }

        .register-header p {
            color: #7f8c8d;
            margin-bottom: 0;
        }

    /* Form Styling */
    .register-form {
        margin-top: 1.5rem;
    }

    .form-group {
        margin-bottom: 1.5rem;
    }

        .form-group label {
            display: block;
            margin-bottom: 0.5rem;
            color: #2c3e50;
            font-weight: 500;
        }

    .input-with-icon {
        position: relative;
        display: flex;
        align-items: center;
    }

        .input-with-icon svg {
            position: absolute;
            left: 12px;
            color: #7f8c8d;
        }

    .form-control {
        width: 100%;
        padding: 12px 12px 12px 40px;
        border: 1px solid #ddd;
        border-radius: 6px;
        font-size: 16px;
        transition: all 0.3s;
    }

        .form-control:focus {
            border-color: #3498db;
            box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.2);
            outline: none;
        }

    /* Password Strength */
    .password-strength {
        margin-top: 0.5rem;
    }

    .strength-meter {
        display: flex;
        gap: 4px;
        margin-bottom: 4px;
    }

    .strength-bar {
        height: 4px;
        flex-grow: 1;
        background: #eee;
        border-radius: 2px;
        transition: all 0.3s;
    }

        .strength-bar.active {
            background: #ff6b6b;
        }

        .strength-bar.medium.active {
            background: #feca57;
        }

        .strength-bar.strong.active {
            background: #1dd1a1;
        }

    .strength-text {
        font-size: 12px;
        color: #7f8c8d;
    }

    /* Terms Checkbox */
    .terms {
        display: flex;
        align-items: center;
        margin-bottom: 1.5rem;
    }

        .terms input[type="checkbox"] {
            margin-right: 8px;
        }

        .terms label {
            margin-bottom: 0;
            font-size: 14px;
        }

        .terms a {
            color: #3498db;
            text-decoration: none;
        }

    /* Button Styling */
    .register-button {
        width: 100%;
        padding: 12px;
        background: #3498db;
        color: white;
        border: none;
        border-radius: 6px;
        font-size: 16px;
        font-weight: 500;
        cursor: pointer;
        transition: all 0.3s;
    }

        .register-button:hover {
            background: #2980b9;
        }

    /* Error Message */
    .alert-error {
        margin-top: 1rem;
        padding: 12px;
        background: #ff6b6b;
        color: white;
        border-radius: 6px;
        font-size: 14px;
    }

    /* Responsive Adjustments */
    @@media (max-width: 768px) {
        .register-card {
            margin: 1rem;
            padding: 1.5rem;
        }
    }
</style>

<div class="register-container">
   

    <div class="register-card">
        <div class="register-header">
            <img src="https://cdn-icons-png.flaticon.com/512/6681/6681204.png" alt="BlogHub Logo" class="logo">
            <h2>Join BlogHub Community</h2>
            <p>Start sharing your stories with the world</p>
        </div>

        <form method="post" asp-controller="Auth" asp-action="Register" class="register-form">
            <div class="form-group">
                <label for="name">Full Name</label>
                <div class="input-with-icon">
                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                        <path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"></path>
                        <circle cx="12" cy="7" r="4"></circle>
                    </svg>
                    <input type="text" id="name" asp-for="Name" class="form-control" placeholder="Enter your full name" required />
                </div>
            </div>

            <div class="form-group">
                <label for="email">Email Address</label>
                <div class="input-with-icon">
                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                        <path d="M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z"></path>
                        <polyline points="22,6 12,13 2,6"></polyline>
                    </svg>
                    <input type="email" id="email" asp-for="Email" class="form-control" placeholder="Enter your email" required />
                </div>
            </div>

            <div class="form-group">
                <label for="password">Password</label>
                <div class="input-with-icon">
                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                        <rect x="3" y="11" width="18" height="11" rx="2" ry="2"></rect>
                        <path d="M7 11V7a5 5 0 0 1 10 0v4"></path>
                    </svg>
                    <input type="password" id="password" asp-for="PasswordHash" class="form-control" placeholder="Create a password" required />
                </div>
                <div class="password-strength">
                    <div class="strength-meter">
                        <div class="strength-bar weak"></div>
                        <div class="strength-bar medium"></div>
                        <div class="strength-bar strong"></div>
                    </div>
                    <span class="strength-text">Password strength</span>
                </div>
            </div>

            <div class="form-group terms">
                <input type="checkbox" id="terms" required />
                <label for="terms">I agree to the <a href="#">Terms of Service</a> and <a href="#">Privacy Policy</a></label>
            </div>

            <button type="submit" class="register-button">Create Account</button>

            @if (ViewBag.Message != null)
            {
                <div class="alert alert-error">
                    @ViewBag.Message
                </div>
            }
        </form>
    </div>
</div>

<script>
    // Password strength indicator
    document.addEventListener('DOMContentLoaded', function() {
        const passwordInput = document.getElementById('password');
        const strengthBars = document.querySelectorAll('.strength-bar');
        const strengthText = document.querySelector('.strength-text');

        passwordInput.addEventListener('input', function() {
            const password = this.value;
            let strength = 0;

            // Length check
            if (password.length >= 8) strength += 1;
            if (password.length >= 12) strength += 1;

            // Complexity checks
            if (/[A-Z]/.test(password)) strength += 1;
            if (/[0-9]/.test(password)) strength += 1;
            if (/[^A-Za-z0-9]/.test(password)) strength += 1;

            // Update UI
            strengthBars.forEach((bar, index) => {
                bar.classList.remove('active');
                if (index < strength) {
                    bar.classList.add('active');
                    // Set specific classes based on strength level
                    if (index === 0) bar.classList.add('weak');
                    if (index === 1) bar.classList.add('medium');
                    if (index === 2) bar.classList.add('strong');
                }
            });

            // Update text
            if (strength <= 2) {
                strengthText.textContent = "Weak";
                strengthText.style.color = "#ff6b6b";
            } else if (strength <= 4) {
                strengthText.textContent = "Medium";
                strengthText.style.color = "#feca57";
            } else {
                strengthText.textContent = "Strong";
                strengthText.style.color = "#1dd1a1";
            }
        });
    });
</script>